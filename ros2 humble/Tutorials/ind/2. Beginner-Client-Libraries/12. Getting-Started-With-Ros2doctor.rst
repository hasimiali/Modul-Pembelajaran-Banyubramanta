.. redirect-dari::

     Tutorial/Memulai-Dengan-Ros2doctor

.. _Ros2Doctor:

Menggunakan ``ros2doctor`` untuk mengidentifikasi masalah
=======================================

**Sasaran:** Identifikasi masalah dalam penyiapan ROS 2 menggunakan alat ``ros2doctor``.

**Tingkat tutorial:** Pemula

**Waktu:** 10 menit

.. isi :: Isi
    :kedalaman: 2
    :lokal:

Latar belakang
----------

Ketika pengaturan ROS 2 Anda tidak berjalan seperti yang diharapkan, Anda dapat memeriksa pengaturannya dengan alat ``ros2doctor``.

``ros2doctor`` memeriksa semua aspek ROS 2, termasuk platform, versi, jaringan, lingkungan, sistem yang sedang berjalan, dan lainnya, serta memperingatkan Anda tentang kemungkinan kesalahan dan penyebab masalah.

Prasyarat
-------------

``ros2doctor`` adalah bagian dari paket ``ros2cli``.
Selama Anda telah menginstal ``ros2cli`` (yang seharusnya dimiliki oleh setiap instalasi normal), Anda akan dapat menggunakan ``ros2doctor``.

Tutorial ini menggunakan :doc:`turtlesim <../Beginner-CLI-Tools/Introducing-Turtlesim/Introducing-Turtlesim>` untuk mengilustrasikan beberapa contoh.

Tugas
-----

1 Periksa penyiapan Anda
^^^^^^^^^^^^^^^^^^^^^^

Mari kita periksa pengaturan ROS 2 umum Anda secara keseluruhan dengan ``ros2doctor``.
Pertama, sumber ROS 2 di terminal baru, lalu masukkan perintah:

.. blok kode :: konsol

     ros2 dokter

Ini akan melakukan pemeriksaan atas semua modul pengaturan Anda dan mengembalikan peringatan dan kesalahan.

Jika pengaturan ROS 2 Anda dalam kondisi sempurna, Anda akan melihat pesan seperti ini:

.. blok kode :: konsol

     Semua <n> pemeriksaan lulus

Namun, bukan hal yang aneh jika beberapa peringatan dikembalikan.
Sebuah ``UserWarning`` tidak berarti pengaturan Anda tidak dapat digunakan; itu lebih mungkin hanya indikasi bahwa ada sesuatu yang dikonfigurasi dengan cara yang tidak ideal.

Jika Anda menerima peringatan, itu akan terlihat seperti ini:

.. blok kode :: konsol

     <path>: <line>: UserWarning: <message>

Misalnya, ``ros2doctor`` akan menemukan peringatan ini jika Anda menggunakan distribusi ROS 2 yang tidak stabil:

.. blok kode :: konsol

     UserWarning: Distribusi <distro> tidak sepenuhnya didukung atau diuji. Untuk mendapatkan fitur yang lebih konsisten, unduh versi stabil di https://index.ros.org/doc/ros2/Installation/

Jika ``ros2doctor`` hanya menemukan peringatan di sistem Anda, Anda masih akan menerima pesan ``Semua <n> pemeriksaan lulus``.

Sebagian besar pemeriksaan dikategorikan sebagai peringatan, bukan kesalahan.
Sebagian besar terserah Anda, pengguna, untuk menentukan pentingnya umpan balik yang dikembalikan ``ros2doctor``.
Jika menemukan kesalahan yang jarang terjadi pada pengaturan Anda, ditunjukkan dengan ``UserWarning: ERROR:``, pemeriksaan dianggap gagal.

Anda akan melihat pesan yang mirip dengan daftar masukan masalah berikut:

.. blok kode :: konsol

   1/3 pemeriksaan gagal

   Modul gagal: jaringan

Kesalahan menunjukkan bahwa sistem kehilangan pengaturan atau fungsi penting yang sangat penting untuk ROS 2.
Kesalahan harus diatasi untuk memastikan sistem berfungsi dengan baik.

2 Periksa sistem
^^^^^^^^^^^^^^^^^^^^

Anda juga dapat memeriksa sistem ROS 2 yang sedang berjalan untuk mengidentifikasi kemungkinan penyebab masalah.
Untuk melihat ``ros2doctor`` bekerja pada sistem yang sedang berjalan, mari jalankan turtlesim, yang memiliki node yang berkomunikasi secara aktif satu sama lain.

Mulai sistem dengan membuka terminal baru, sumber ROS 2, dan masukkan perintah:

.. blok kode :: konsol

     ros2 jalankan turtlesim turtlesim_node

Buka terminal lain dan sumber ROS 2 untuk menjalankan kontrol teleop:

.. blok kode :: konsol

     ros2 jalankan turtlesim turtle_teleop_key

Sekarang jalankan ``ros2doctor`` lagi di terminalnya sendiri.
Anda akan melihat peringatan dan kesalahan yang Anda alami saat terakhir kali menjalankan ``ros2doctor`` pada pengaturan Anda jika ada.
Mengikuti itu akan menjadi beberapa peringatan baru yang berkaitan dengan sistem itu sendiri:

.. blok kode :: konsol

     UserWarning: Penayang tanpa pelanggan terdeteksi di /turtle1/color_sensor.
     UserWarning: Penayang tanpa pelanggan terdeteksi di /turtle1/pose.

Tampaknya node ``/turtlesim`` memublikasikan data ke dua topik yang tidak dilanggan, dan ``ros2doctor`` menganggap hal ini dapat menyebabkan masalah.

Jika Anda menjalankan perintah untuk mengulangi topik ``/color_sensor`` dan ``/pose``, peringatan tersebut akan hilang karena penerbit akan memiliki pelanggan.

Anda dapat mencoba ini dengan membuka dua terminal baru saat turtlesim masih berjalan, masing-masing sumber ROS 2, dan menjalankan masing-masing perintah berikut di terminal mereka sendiri:

.. blok kode :: konsol

     topik ros2 gema /turtle1/color_sensor

.. blok kode :: konsol

     topik ros2 gema /turtle1/pose

Kemudian jalankan lagi ``ros2doctor`` di terminalnya.
Peringatan ``penerbit tanpa pelanggan`` akan hilang.
(Pastikan untuk memasukkan ``Ctrl+C`` di terminal tempat Anda menjalankan ``echo``).

Sekarang coba keluar dari jendela turtlesim atau keluar dari teleop dan jalankan ``ros2doctor`` lagi.
Anda akan melihat lebih banyak peringatan yang menunjukkan ``penerbit tanpa pelanggan`` atau ``pelanggan tanpa penerbit`` untuk topik yang berbeda, karena sekarang satu node dalam sistem tidak tersedia.

Dalam sistem yang kompleks dengan banyak node, ``ros2doctor`` akan sangat berharga untuk mengidentifikasi kemungkinan penyebab masalah komunikasi.

3 Dapatkan laporan lengkap
^^^^^^^^^^^^^^^^^^^^